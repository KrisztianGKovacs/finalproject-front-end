{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nconst PAT = 'e3e2e57c46984160bfd4a496e0abe5ec';\nconst USER_ID = 'chrissmith';\nconst APP_ID = 'test';\nconst MODEL_ID = 'face-detection';\nconst MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';\nconst IMAGE_URL = `{imageUrl}`;\nconst raw = JSON.stringify({\n  \"user_app_id\": {\n    \"user_id\": USER_ID,\n    \"app_id\": APP_ID\n  },\n  \"inputs\": [{\n    \"data\": {\n      \"image\": {\n        \"url\": IMAGE_URL\n      }\n    }\n  }]\n});\nconst Teszt = ({\n  imageUrl\n}) => {\n  _s();\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n\n  //const IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\n  useEffect(() => {\n    console.log('run run run');\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions).then(response => response.text())\n    //.then(response => this.calculateFaceLocation(response))\n    .then(result => console.log(result)).catch(error => console.log('error', error));\n  }, []);\n};\n_s(Teszt, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Teszt;\nexport default Teszt;\nvar _c;\n$RefreshReg$(_c, \"Teszt\");","map":{"version":3,"names":["React","useEffect","PAT","USER_ID","APP_ID","MODEL_ID","MODEL_VERSION_ID","IMAGE_URL","raw","JSON","stringify","Teszt","imageUrl","_s","requestOptions","method","headers","body","console","log","fetch","then","response","text","result","catch","error","_c","$RefreshReg$"],"sources":["C:/Users/Putyi/Downloads/Tanfolyam/finalproject/finalproject/src/component/teszt/teszt.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\n\r\nconst PAT = 'e3e2e57c46984160bfd4a496e0abe5ec';\r\n    \r\n    const USER_ID = 'chrissmith';       \r\n    const APP_ID = 'test';\r\n    \r\n    const MODEL_ID = 'face-detection';\r\n    const MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';    \r\n    \r\n    const IMAGE_URL = `{imageUrl}`;\r\n\r\n    \r\n\r\nconst raw = JSON.stringify({\r\n    \"user_app_id\": {\r\n        \"user_id\": USER_ID,\r\n        \"app_id\": APP_ID\r\n    },\r\n    \"inputs\": [\r\n        {\r\n            \"data\": {\r\n                \"image\": {\r\n                    \"url\": IMAGE_URL\r\n                }\r\n            }\r\n        }\r\n    ]\r\n});\r\n\r\nconst Teszt = ( {imageUrl} ) => {\r\n    \r\n    \r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Key ' + PAT\r\n        },\r\n        body: raw\r\n    };\r\n\r\n    \r\n    //const IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\r\n    useEffect(() => {\r\n    \r\n            console.log('run run run');\r\n            fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions)\r\n        .then(response => response.text())\r\n        //.then(response => this.calculateFaceLocation(response))\r\n        .then(result => console.log(result))\r\n        .catch(error => console.log('error', error))\r\n    \r\n            }, []);\r\n}\r\n\r\nexport default Teszt;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAGxC,MAAMC,GAAG,GAAG,kCAAkC;AAE1C,MAAMC,OAAO,GAAG,YAAY;AAC5B,MAAMC,MAAM,GAAG,MAAM;AAErB,MAAMC,QAAQ,GAAG,gBAAgB;AACjC,MAAMC,gBAAgB,GAAG,kCAAkC;AAE3D,MAAMC,SAAS,GAAI,YAAW;AAIlC,MAAMC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;EACvB,aAAa,EAAE;IACX,SAAS,EAAEP,OAAO;IAClB,QAAQ,EAAEC;EACd,CAAC;EACD,QAAQ,EAAE,CACN;IACI,MAAM,EAAE;MACJ,OAAO,EAAE;QACL,KAAK,EAAEG;MACX;IACJ;EACJ,CAAC;AAET,CAAC,CAAC;AAEF,MAAMI,KAAK,GAAGA,CAAE;EAACC;AAAQ,CAAC,KAAM;EAAAC,EAAA;EAG5B,MAAMC,cAAc,GAAG;IACnBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,eAAe,EAAE,MAAM,GAAGd;IAC9B,CAAC;IACDe,IAAI,EAAET;EACV,CAAC;;EAGD;EACAP,SAAS,CAAC,MAAM;IAERiB,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BC,KAAK,CAAC,qCAAqC,GAAGf,QAAQ,GAAG,YAAY,GAAGC,gBAAgB,GAAG,UAAU,EAAEQ,cAAc,CAAC,CACzHO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACjC;IAAA,CACCF,IAAI,CAACG,MAAM,IAAIN,OAAO,CAACC,GAAG,CAACK,MAAM,CAAC,CAAC,CACnCC,KAAK,CAACC,KAAK,IAAIR,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEO,KAAK,CAAC,CAAC;EAExC,CAAC,EAAE,EAAE,CAAC;AAClB,CAAC;AAAAb,EAAA,CAxBKF,KAAK;AAAAgB,EAAA,GAALhB,KAAK;AA0BX,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}