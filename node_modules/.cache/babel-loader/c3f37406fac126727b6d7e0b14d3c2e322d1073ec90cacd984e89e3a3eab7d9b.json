{"ast":null,"code":"import React from \"react\";\nconst Teszt = ({\n  imageUrl\n}) => {\n  const PAT = 'e3e2e57c46984160bfd4a496e0abe5ec';\n  const USER_ID = 'chrissmith';\n  const APP_ID = 'test';\n  const MODEL_ID = 'face-detection';\n  const MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';\n  const IMAGE_URL = '{imageUrl}';\n  //const IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\n\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions).then(response => response.text())\n  //.then(response => this.calculateFaceLocation(response))\n  .then(result => console.log(result)).catch(error => console.log('error', error));\n};\n_c = Teszt;\nexport default Teszt;\nvar _c;\n$RefreshReg$(_c, \"Teszt\");","map":{"version":3,"names":["React","Teszt","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","MODEL_VERSION_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","text","result","console","log","catch","error","_c","$RefreshReg$"],"sources":["C:/Users/Putyi/Downloads/Tanfolyam/finalproject/finalproject/src/component/teszt/teszt.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Teszt = ( {imageUrl} ) => {\r\n    const PAT = 'e3e2e57c46984160bfd4a496e0abe5ec';\r\n\r\nconst USER_ID = 'chrissmith';       \r\nconst APP_ID = 'test';\r\n\r\nconst MODEL_ID = 'face-detection';\r\nconst MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';    \r\n\r\nconst IMAGE_URL = '{imageUrl}';\r\n//const IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\r\n\r\n\r\nconst raw = JSON.stringify({\r\n    \"user_app_id\": {\r\n        \"user_id\": USER_ID,\r\n        \"app_id\": APP_ID\r\n    },\r\n    \"inputs\": [\r\n        {\r\n            \"data\": {\r\n                \"image\": {\r\n                    \"url\": IMAGE_URL\r\n                }\r\n            }\r\n        }\r\n    ]\r\n});\r\n\r\nconst requestOptions = {\r\n    method: 'POST',\r\n    headers: {\r\n        'Accept': 'application/json',\r\n        'Authorization': 'Key ' + PAT\r\n    },\r\n    body: raw\r\n};\r\n\r\nreturn(\r\n    \r\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions)\r\n    .then(response => response.text())\r\n    //.then(response => this.calculateFaceLocation(response))\r\n    .then(result => console.log(result))\r\n    .catch(error => console.log('error', error))\r\n    \r\n);\r\n}\r\n\r\nexport default Teszt;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAGA,CAAE;EAACC;AAAQ,CAAC,KAAM;EAC5B,MAAMC,GAAG,GAAG,kCAAkC;EAElD,MAAMC,OAAO,GAAG,YAAY;EAC5B,MAAMC,MAAM,GAAG,MAAM;EAErB,MAAMC,QAAQ,GAAG,gBAAgB;EACjC,MAAMC,gBAAgB,GAAG,kCAAkC;EAE3D,MAAMC,SAAS,GAAG,YAAY;EAC9B;;EAGA,MAAMC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;IACvB,aAAa,EAAE;MACX,SAAS,EAAEP,OAAO;MAClB,QAAQ,EAAEC;IACd,CAAC;IACD,QAAQ,EAAE,CACN;MACI,MAAM,EAAE;QACJ,OAAO,EAAE;UACL,KAAK,EAAEG;QACX;MACJ;IACJ,CAAC;EAET,CAAC,CAAC;EAEF,MAAMI,cAAc,GAAG;IACnBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,eAAe,EAAE,MAAM,GAAGX;IAC9B,CAAC;IACDY,IAAI,EAAEN;EACV,CAAC;EAED,OAEIO,KAAK,CAAC,qCAAqC,GAAGV,QAAQ,GAAG,YAAY,GAAGC,gBAAgB,GAAG,UAAU,EAAEK,cAAc,CAAC,CACrHK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC;EACjC;EAAA,CACCF,IAAI,CAACG,MAAM,IAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC,CACnCG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC,CAAC;AAGhD,CAAC;AAAAC,EAAA,GA/CKxB,KAAK;AAiDX,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}