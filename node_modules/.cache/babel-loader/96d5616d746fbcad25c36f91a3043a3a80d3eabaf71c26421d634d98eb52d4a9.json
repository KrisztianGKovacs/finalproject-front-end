{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Putyi\\\\Downloads\\\\Tanfolyam\\\\finalproject\\\\finalproject\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Part from './component/particles/particles';\nimport Navigation from './component/navigation/navigation';\nimport Logo from './component/logo/logo';\nimport ImageLinkForm from './component/imagelinkform/imagelinkform';\nimport Rank from './component/rank/rank';\n\n//import './ImageLinkForm';\n//import './FaceRecognition';\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// In this section, we set the user authentication, user and app ID, model details, and the URL\n// of the image we want as an input. Change these strings to run your own example.\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Your PAT (Personal Access Token) can be found in the portal under Authentification\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAT = 'e3e2e57c46984160bfd4a496e0abe5ec';\n// Specify the correct user_id/app_id pairings\n// Since you're making inferences outside your app's scope\nconst USER_ID = 'clarifai';\nconst APP_ID = 'main';\n// Change these to whatever model and image URL you want to use\nconst MODEL_ID = 'face-detection';\nconst MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';\nconst IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\n\n///////////////////////////////////////////////////////////////////////////////////\n// YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n///////////////////////////////////////////////////////////////////////////////////\n\nconst raw = JSON.stringify({\n  \"user_app_id\": {\n    \"user_id\": USER_ID,\n    \"app_id\": APP_ID\n  },\n  \"inputs\": [{\n    \"data\": {\n      \"image\": {\n        \"url\": IMAGE_URL\n      }\n    }\n  }]\n});\nconst requestOptions = {\n  method: 'POST',\n  headers: {\n    'Accept': 'application/json',\n    'Authorization': 'Key ' + PAT\n  },\n  body: raw\n};\n\n// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// this will default to the latest version_id\n\nfetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Part, {\n        className: \"part\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Part","Navigation","Logo","ImageLinkForm","Rank","jsxDEV","_jsxDEV","PAT","USER_ID","APP_ID","MODEL_ID","MODEL_VERSION_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","text","result","console","log","catch","error","App","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Putyi/Downloads/Tanfolyam/finalproject/finalproject/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Part from './component/particles/particles';\nimport Navigation from './component/navigation/navigation';\nimport Logo from './component/logo/logo';\nimport ImageLinkForm from './component/imagelinkform/imagelinkform';\nimport Rank from './component/rank/rank';\n\n//import './ImageLinkForm';\n//import './FaceRecognition';\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// In this section, we set the user authentication, user and app ID, model details, and the URL\n// of the image we want as an input. Change these strings to run your own example.\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Your PAT (Personal Access Token) can be found in the portal under Authentification\nconst PAT = 'e3e2e57c46984160bfd4a496e0abe5ec';\n// Specify the correct user_id/app_id pairings\n// Since you're making inferences outside your app's scope\nconst USER_ID = 'clarifai';       \nconst APP_ID = 'main';\n// Change these to whatever model and image URL you want to use\nconst MODEL_ID = 'face-detection';\nconst MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';    \nconst IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\n\n///////////////////////////////////////////////////////////////////////////////////\n// YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n///////////////////////////////////////////////////////////////////////////////////\n\nconst raw = JSON.stringify({\n    \"user_app_id\": {\n        \"user_id\": USER_ID,\n        \"app_id\": APP_ID\n    },\n    \"inputs\": [\n        {\n            \"data\": {\n                \"image\": {\n                    \"url\": IMAGE_URL\n                }\n            }\n        }\n    ]\n});\n\nconst requestOptions = {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + PAT\n    },\n    body: raw\n};\n\n// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// this will default to the latest version_id\n\nfetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions)\n    .then(response => response.text())\n    .then(result => console.log(result))\n    .catch(error => console.log('error', error));\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Part className='part'/>\n      <Navigation />\n      <Logo />\n      <Rank />\n      <ImageLinkForm />\n      {/*<FaceRecognition />*/}  \n      </div>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,iCAAiC;AAClD,OAAOC,UAAU,MAAM,mCAAmC;AAC1D,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,aAAa,MAAM,yCAAyC;AACnE,OAAOC,IAAI,MAAM,uBAAuB;;AAExC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAG,kCAAkC;AAC9C;AACA;AACA,MAAMC,OAAO,GAAG,UAAU;AAC1B,MAAMC,MAAM,GAAG,MAAM;AACrB;AACA,MAAMC,QAAQ,GAAG,gBAAgB;AACjC,MAAMC,gBAAgB,GAAG,kCAAkC;AAC3D,MAAMC,SAAS,GAAG,8CAA8C;;AAEhE;AACA;AACA;;AAEA,MAAMC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;EACvB,aAAa,EAAE;IACX,SAAS,EAAEP,OAAO;IAClB,QAAQ,EAAEC;EACd,CAAC;EACD,QAAQ,EAAE,CACN;IACI,MAAM,EAAE;MACJ,OAAO,EAAE;QACL,KAAK,EAAEG;MACX;IACJ;EACJ,CAAC;AAET,CAAC,CAAC;AAEF,MAAMI,cAAc,GAAG;EACnBC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAE;IACL,QAAQ,EAAE,kBAAkB;IAC5B,eAAe,EAAE,MAAM,GAAGX;EAC9B,CAAC;EACDY,IAAI,EAAEN;AACV,CAAC;;AAED;AACA;AACA;;AAEAO,KAAK,CAAC,qCAAqC,GAAGV,QAAQ,GAAG,YAAY,GAAGC,gBAAgB,GAAG,UAAU,EAAEK,cAAc,CAAC,CACjHK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC,CACnCG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC,CAAC;AAGhD,MAAMC,GAAG,SAAS9B,SAAS,CAAC;EAC1B+B,MAAMA,CAAA,EAAG;IACP,oBACExB,OAAA;MAAKyB,SAAS,EAAC,KAAK;MAAAC,QAAA,gBACpB1B,OAAA,CAACN,IAAI;QAAC+B,SAAS,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACxB9B,OAAA,CAACL,UAAU;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACd9B,OAAA,CAACJ,IAAI;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACR9B,OAAA,CAACF,IAAI;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACR9B,OAAA,CAACH,aAAa;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CAAC;EAEV;AACF;AAEA,eAAeP,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}